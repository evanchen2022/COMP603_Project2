/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Assignment_Two;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author evan
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
    
    private String flightT = null;
    //private DBOperations dbOps01;
    public Flight newFlight;
    
    public HomePage() {
        initComponents();
        this.setLocationRelativeTo(null);
        //dbOps01.createBookedTicketTable();
        
    }

    public String getFlightT() {
        return flightT;
    }

    public void setFlightT(String flightT) {
        this.flightT = flightT;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        departCity = new javax.swing.JComboBox<>();
        arrivalCity = new javax.swing.JComboBox<>();
        flightTimeAm = new javax.swing.JRadioButton();
        flightTimePm = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        adult = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        child = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        infants = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        serviceC = new javax.swing.JComboBox<>();
        btnConfirm = new javax.swing.JButton();
        dateChooser = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        checkTicketFname = new javax.swing.JTextField();
        checkTicketLname = new javax.swing.JTextField();
        checkBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Welsome to Airline Booking System");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Departure city:");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setText("Destination:");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel4.setText("Flight date(yyyy-mm-dd):");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel5.setText("Fight time:");

        departCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auckland", "Wellington" }));
        departCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departCityActionPerformed(evt);
            }
        });

        arrivalCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New York", "Shanghai", "Tokyo" }));

        buttonGroup1.add(flightTimeAm);
        flightTimeAm.setText("8AM");
        flightTimeAm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightTimeAmActionPerformed(evt);
            }
        });

        buttonGroup1.add(flightTimePm);
        flightTimePm.setText("2PM");
        flightTimePm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightTimePmActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel6.setText("Choose Passenger:");

        adult.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel7.setText("Adult");

        jLabel8.setText("Children");

        child.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel9.setText("Infants ");

        infants.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel10.setText("Service class:");

        serviceC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy", "Business" }));

        btnConfirm.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(departCity, 0, 175, Short.MAX_VALUE)
                    .addComponent(arrivalCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightTimePm)
                            .addComponent(flightTimeAm, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(adult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(child, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(infants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(serviceC, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(36, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(departCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(arrivalCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(adult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(infants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(child, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(serviceC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flightTimeAm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flightTimePm))
                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel11.setText("Check existing ticket: ");

        checkTicketFname.setText("First Name");
        checkTicketFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTicketFnameActionPerformed(evt);
            }
        });

        checkTicketLname.setText("Last Name");
        checkTicketLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTicketLnameActionPerformed(evt);
            }
        });

        checkBtn.setText("Check");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkTicketFname))
                .addGap(18, 18, 18)
                .addComponent(checkTicketLname, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkBtn)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkTicketFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkTicketLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBtn))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void flightTimeAmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightTimeAmActionPerformed
        // TODO add your handling code here:
        this.setFlightT("8AM");
    }//GEN-LAST:event_flightTimeAmActionPerformed

    private void checkTicketFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTicketFnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkTicketFnameActionPerformed

    private void checkTicketLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTicketLnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkTicketLnameActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        //Evan: check the flight database:
        //step1: check if there is flight by (destination, date and time match)  => Yes
        //step2: add customer into this flight. 
        //step3: otherwise, create a new flight, then go next page to fill customer details.
        
        try {
            //built a connecting with database, this one need to change in the future:
            DBManager dbFlight = new DBManager();
            
               
            
            
            //get the user name and password from database:
            String departCT = departCity.getSelectedItem().toString();
            String arrivalCT = arrivalCity.getSelectedItem().toString();
            String flightDate = dateChooser.getText();
            String flightTime = flightT;
            int passengerNo = (Integer)adult.getValue() + (Integer)child.getValue() + (Integer)infants.getValue();
            String serviceClass = serviceC.getSelectedItem().toString();
            
            
            // Check if flightTime is empty
            if (flightTime == null) {
                JOptionPane.showMessageDialog(this, "Please select a flight time.");
                return; // Exit the method to prevent further execution
            }
            
            
            //check the date time first, must be after today!!!
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate enteredDate = LocalDate.parse(flightDate, formatter);
            LocalDate currentDate = LocalDate.now();
            
            if (enteredDate.isBefore(currentDate)) {
                JOptionPane.showMessageDialog(this, "Please select date time after today.");
                return; // Exit the method to prevent further execution
            } 
            
            
            //after the input, create a new flight for next page!!!!
            newFlight = new Flight(departCT, arrivalCT, flightDate, flightTime);
            
            System.out.println("This line for testing: check if the newFLight object is correctly create.");
            System.out.println(newFlight.toString());

            //check if we have this name at hte table:
            Statement stm = dbFlight.conn.createStatement();
            String sql = "select * from flight where departcity='"+departCT+"' and arrivalcity= '"+arrivalCT+"'";           
            ResultSet rs = stm.executeQuery(sql);
            
            if(rs.next()){
                //if user name and password is true then go to Home page
                System.out.println("Found this flight at database, now creating this order........");
                Flight newFlight = new Flight(departCT, arrivalCT, flightDate,flightTime);
                System.out.println("User choose this flight line:");
                System.out.println("depart city:"+departCT);
                System.out.println("arrival city:"+arrivalCT);
                System.out.println("date:"+flightDate);   //有问题
                System.out.println("time:"+flightTime);   //有问题
                System.out.println("number of passenger:"+passengerNo);
                System.out.println("service class:"+serviceClass);
                
                
                dispose();  //close the login page\
                PassengerInfoPage detailPage = new PassengerInfoPage(passengerNo);
                detailPage.setPassengerNumber(1);
                detailPage.show();
            } else {
                //if hte username and pw is wrong show error:
                // Check if flightTime is empty

                JOptionPane.showMessageDialog(this, "We don't flight to this city recently, please choose other destination city!");
                
            }
            
            dbFlight.conn.close();
            
            
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void flightTimePmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightTimePmActionPerformed
        // TODO add your handling code here:
        this.setFlightT("2PM");
    }//GEN-LAST:event_flightTimePmActionPerformed

    private void departCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departCityActionPerformed

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        
        try {
            //built a connecting with database, this one need to change in the future:
            DBManager dbCheckTicket = new DBManager();            
            
            //get the user name and password from database:           
            String fName = checkTicketFname.getText().toUpperCase();
            String lName = checkTicketLname.getText().toUpperCase();
            
            System.out.println(fName);
            System.out.println(lName);
            
            // Check if flightTime is empty
            if (fName == null || lName == null) {
                JOptionPane.showMessageDialog(this, "Please input your first name and last name to check.");
                return; // Exit the method to prevent further execution
            }
            
            
            

            //check if we have this name at hte table:
            Statement stm = dbCheckTicket.conn.createStatement();
            String sql = "select * from bookedticket where UPPER(fname) ='"+fName+"' and UPPER(lname)= '"+lName+"'";           
            ResultSet rs = stm.executeQuery(sql);
            
            if(rs.next()){
                //if user name and password is true then go to Home page
                
                // If user name and password are true, then go to the ticket details page
                String ticketDetails = "";

                // Retrieve the values from the result set and concatenate them into the ticketDetails string
                String ticketNum = rs.getString("TicketID");
                String firstN = rs.getString("FName");
                String lastN = rs.getString("LName");  
                String fdate = rs.getString("flightdate");
                String fDeparture = rs.getString("DepartCity");
                String fArrival = rs.getString("ArrivalCity");
                String ftime = rs.getString("flightTime");
                String serviceC = rs.getString("class");
                String fprice = rs.getString("Price");
                
                // ... Add more columns as needed

                ticketDetails += "Ticket Number: " + ticketNum + "\n";
                ticketDetails += "+++++++++++++++++++++++++++++++++++++\n"; 
                ticketDetails += "Passenger Details:\n";
                ticketDetails += "First Name: " + firstN + "\n";
                ticketDetails += "Last Name: " + lastN + "\n"; 
                ticketDetails += "+++++++++++++++++++++++++++++++++++++\n"; 
                ticketDetails += "Flight Details:\n";
                ticketDetails += "Flight Date: " + fdate + "\n";
                ticketDetails += "Departure City: " + fDeparture + "\n";
                ticketDetails += "Arrival City: " + fArrival + "\n";
                ticketDetails += "Flight time: " + ftime + "\n";
                ticketDetails += "+++++++++++++++++++++++++++++++++++++\n"; 
                ticketDetails += "Price Details:\n";
                ticketDetails += "Service Class: " + serviceC + "\n";
                ticketDetails += "Price: " + fprice + "\n";
                // ... Concatenate more columns as needed
                
                
                CheckTicket ticketDetail = new CheckTicket();
                ticketDetail.jTextArea1.setText(ticketDetails);               
                ticketDetail.show();
                
            } else {
                //if hte username and pw is wrong show error:
                JOptionPane.showMessageDialog(this, "We can't find your ticket!");              
            }
            
            dbCheckTicket.conn.close();
            
            
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_checkBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner adult;
    private javax.swing.JComboBox<String> arrivalCity;
    private javax.swing.JButton btnConfirm;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton checkBtn;
    private javax.swing.JTextField checkTicketFname;
    private javax.swing.JTextField checkTicketLname;
    private javax.swing.JSpinner child;
    private javax.swing.JTextField dateChooser;
    private javax.swing.JComboBox<String> departCity;
    private javax.swing.JRadioButton flightTimeAm;
    private javax.swing.JRadioButton flightTimePm;
    private javax.swing.JSpinner infants;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> serviceC;
    // End of variables declaration//GEN-END:variables
}
